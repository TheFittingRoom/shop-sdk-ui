name: Deploy To Dev

on:
  pull_request_target:
    types:
      - closed

permissions:
  id-token: write
  contents: write

jobs:
  get_version_label:
    if: github.event.pull_request.merged == true
    uses: ./.github/workflows/get-version-label.yaml
  build:
    if: github.event.pull_request.merged == true && needs.get_version_label.outputs.version_label != 'chore'
    runs-on: ubuntu-latest
    needs: get_version_label
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Bump Version
        env:
          GITHUB_TOKEN: ${{ secrets.SDK_PUSH_PAT}}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          npm version "${{ needs.get_version_label.outputs.version_label }}"

      - name: Build
        run: |
          envsubst < .env.dev > .env
          npm run build:dev

      - name: Publish to NPM (next)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public --tag next --verbose

      - name: Commit and Push Version
        run: |
          git add package.json package-lock.json
          NEW_VERSION=$(npm pkg get version | tr -d '"')
          git commit -m "${{ needs.get_version_label.outputs.version_label }}(next): ${NEW_VERSION}"
          git push origin main --follow-tags
